{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Driss\\\\OneDrive\\\\Documents\\\\Youtube_Library\\\\youtube_library\\\\src\\\\view\\\\MainPanelView.tsx\";\nimport React from 'react';\nimport VideoPlaybackView from './VideoPlaybackView';\nimport MainPanelModel from '../model/MainPanelModel';\nimport '../css/mainPanel.css';\n\n// types des éléments du tableaux vidéos de la base de données\n\n// type du nom et des videos de l'utilisateur\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MainPanelView extends React.Component {\n  render() {\n    const {\n      username\n    } = this.props;\n    const {\n      userVideos\n    } = this.props;\n    // première vidéo qui apparaît dans la librarie de l'utilisateur\n    const getFirstVideo = MainPanelModel.getFirstVideo(userVideos);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-panel-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-playback\",\n        children: getFirstVideo ?\n        /*#__PURE__*/\n        //Affiche la vidéo que l'utilisateur veut visionner si getFirstVideo n'est pas null\n        _jsxDEV(VideoPlaybackView, {\n          videoId: getFirstVideo.id,\n          videoTitle: getFirstVideo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this) :\n        /*#__PURE__*/\n        // affiche un message d'erreur si getFirstVideo est null\n        _jsxDEV(\"div\", {\n          children: \"Aucune vid\\xE9o trouv\\xE9e\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default MainPanelView;","map":{"version":3,"names":["React","VideoPlaybackView","MainPanelModel","jsxDEV","_jsxDEV","MainPanelView","Component","render","username","props","userVideos","getFirstVideo","className","children","videoId","id","videoTitle","title","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Driss/OneDrive/Documents/Youtube_Library/youtube_library/src/view/MainPanelView.tsx"],"sourcesContent":["import React from 'react';\r\nimport SearchFormView from './SearchFormView';\r\nimport VideoPlaybackView from './VideoPlaybackView';\r\nimport MainPanelModel from '../model/MainPanelModel';\r\nimport '../css/mainPanel.css';\r\n\r\n// types des éléments du tableaux vidéos de la base de données\r\ninterface videos {\r\n    title: string;\r\n    id: string;\r\n}\r\n// type du nom et des videos de l'utilisateur\r\ninterface MainPanelViewProps {\r\n  username: string;\r\n  userVideos: videos[];\r\n  showSearchForm: boolean;\r\n}\r\n\r\nclass MainPanelView extends React.Component<MainPanelViewProps> {\r\n    render() {\r\n        const { username } = this.props;\r\n        const { userVideos } = this.props;\r\n        // première vidéo qui apparaît dans la librarie de l'utilisateur\r\n        const getFirstVideo = MainPanelModel.getFirstVideo(userVideos);\r\n\r\n        return (\r\n            <div className=\"main-panel-container\">\r\n                {/*Affiche le formulaire de recherche de vidéo*/}\r\n               {/*<SearchFormView />*/}\r\n                \r\n            <div className=\"video-playback\">\r\n            {getFirstVideo ? (\r\n                //Affiche la vidéo que l'utilisateur veut visionner si getFirstVideo n'est pas null\r\n                <VideoPlaybackView videoId={getFirstVideo.id} videoTitle={getFirstVideo.title}/>\r\n                ) : (\r\n                // affiche un message d'erreur si getFirstVideo est null\r\n                <div>Aucune vidéo trouvée</div>\r\n                )}\r\n            </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainPanelView;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,cAAc,MAAM,yBAAyB;AACpD,OAAO,sBAAsB;;AAE7B;;AAKA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAOA,MAAMC,aAAa,SAASL,KAAK,CAACM,SAAS,CAAqB;EAC5DC,MAAMA,CAAA,EAAG;IACL,MAAM;MAAEC;IAAS,CAAC,GAAG,IAAI,CAACC,KAAK;IAC/B,MAAM;MAAEC;IAAW,CAAC,GAAG,IAAI,CAACD,KAAK;IACjC;IACA,MAAME,aAAa,GAAGT,cAAc,CAACS,aAAa,CAACD,UAAU,CAAC;IAE9D,oBACIN,OAAA;MAAKQ,SAAS,EAAC,sBAAsB;MAAAC,QAAA,eAIrCT,OAAA;QAAKQ,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAC9BF,aAAa;QAAA;QACV;QACAP,OAAA,CAACH,iBAAiB;UAACa,OAAO,EAAEH,aAAa,CAACI,EAAG;UAACC,UAAU,EAAEL,aAAa,CAACM;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;QAAA;QAEhF;QACAjB,OAAA;UAAAS,QAAA,EAAK;QAAoB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAC7B;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAED,CAAC;EAEd;AACJ;AAEA,eAAehB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}