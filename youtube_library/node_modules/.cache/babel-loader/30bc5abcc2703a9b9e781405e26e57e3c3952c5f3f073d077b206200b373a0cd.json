{"ast":null,"code":"class AppController {\n  constructor(username, setLoading, setUserVideos) {\n    this.username = void 0;\n    this.setLoading = void 0;\n    this.setUserVideos = void 0;\n    this.username = username;\n    this.setLoading = setLoading;\n    this.setUserVideos = setUserVideos;\n  }\n  async fetchUserVideos() {\n    this.setLoading(true);\n    await new Promise(resolve => setTimeout(resolve, 80));\n    const response = await fetch(`http://localhost:3001/api/user/${this.username}/videos`);\n    if (response.ok) {\n      const userVideos = await response.json();\n      this.setUserVideos(userVideos);\n    }\n    this.setLoading(false);\n  }\n  async handleVideoAdd(video) {\n    this.setLoading(true);\n    const response = await fetch(`http://localhost:3001/api/library/${this.username}/videos`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(video)\n    });\n    if (response.ok) {\n      await this.fetchUserVideos();\n    }\n    this.setLoading(false);\n  }\n  async handleVideoDelete(videoId) {\n    this.setLoading(true);\n    const response = await fetch(`http://localhost:3001/api/library/${this.username}/videos/${videoId}`, {\n      method: 'DELETE'\n    });\n    if (response.ok) {\n      await this.fetchUserVideos();\n    }\n    this.setLoading(false);\n  }\n}\nexport default AppController;","map":{"version":3,"names":["AppController","constructor","username","setLoading","setUserVideos","fetchUserVideos","Promise","resolve","setTimeout","response","fetch","ok","userVideos","json","handleVideoAdd","video","method","headers","body","JSON","stringify","handleVideoDelete","videoId"],"sources":["C:/Users/Driss/OneDrive/Documents/Youtube_Library/youtube_library/src/controller/AppController.tsx"],"sourcesContent":["interface Video {\r\n  title: string;\r\n  id: string;\r\n}\r\n\r\nclass AppController {\r\n  username: string;\r\n  setLoading: (isLoading: boolean) => void;\r\n  setUserVideos: (videos: Video[]) => void;\r\n\r\n  constructor(username: string, setLoading: (isLoading: boolean) => void, setUserVideos: (videos: Video[]) => void) {\r\n    this.username = username;\r\n    this.setLoading = setLoading;\r\n    this.setUserVideos = setUserVideos;\r\n  }\r\n\r\n  async fetchUserVideos() {\r\n    this.setLoading(true);\r\n    await new Promise(resolve => setTimeout(resolve, 80));\r\n    const response = await fetch(`http://localhost:3001/api/user/${this.username}/videos`);\r\n    if (response.ok) {\r\n      const userVideos = await response.json();\r\n      this.setUserVideos(userVideos);\r\n    }\r\n    this.setLoading(false);\r\n  }\r\n\r\n  async handleVideoAdd(video: Video) {\r\n    this.setLoading(true);\r\n    const response = await fetch(`http://localhost:3001/api/library/${this.username}/videos`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(video),\r\n    });\r\n\r\n    if (response.ok) {\r\n      await this.fetchUserVideos();\r\n    }\r\n    this.setLoading(false);\r\n  }\r\n\r\n  async handleVideoDelete(videoId: string) {\r\n    this.setLoading(true);\r\n\r\n    const response = await fetch(`http://localhost:3001/api/library/${this.username}/videos/${videoId}`, {\r\n      method: 'DELETE',\r\n    });\r\n\r\n    if (response.ok) {\r\n      await this.fetchUserVideos();\r\n    }\r\n\r\n    this.setLoading(false);\r\n  }\r\n}\r\n\r\nexport default AppController;\r\n"],"mappings":"AAKA,MAAMA,aAAa,CAAC;EAKlBC,WAAWA,CAACC,QAAgB,EAAEC,UAAwC,EAAEC,aAAwC,EAAE;IAAA,KAJlHF,QAAQ;IAAA,KACRC,UAAU;IAAA,KACVC,aAAa;IAGX,IAAI,CAACF,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,aAAa,GAAGA,aAAa;EACpC;EAEA,MAAMC,eAAeA,CAAA,EAAG;IACtB,IAAI,CAACF,UAAU,CAAC,IAAI,CAAC;IACrB,MAAM,IAAIG,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,EAAE,CAAC,CAAC;IACrD,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,IAAI,CAACR,QAAQ,SAAS,CAAC;IACtF,IAAIO,QAAQ,CAACE,EAAE,EAAE;MACf,MAAMC,UAAU,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MACxC,IAAI,CAACT,aAAa,CAACQ,UAAU,CAAC;IAChC;IACA,IAAI,CAACT,UAAU,CAAC,KAAK,CAAC;EACxB;EAEA,MAAMW,cAAcA,CAACC,KAAY,EAAE;IACjC,IAAI,CAACZ,UAAU,CAAC,IAAI,CAAC;IACrB,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,IAAI,CAACR,QAAQ,SAAS,EAAE;MACxFc,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,KAAK;IAC5B,CAAC,CAAC;IAEF,IAAIN,QAAQ,CAACE,EAAE,EAAE;MACf,MAAM,IAAI,CAACN,eAAe,CAAC,CAAC;IAC9B;IACA,IAAI,CAACF,UAAU,CAAC,KAAK,CAAC;EACxB;EAEA,MAAMkB,iBAAiBA,CAACC,OAAe,EAAE;IACvC,IAAI,CAACnB,UAAU,CAAC,IAAI,CAAC;IAErB,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,IAAI,CAACR,QAAQ,WAAWoB,OAAO,EAAE,EAAE;MACnGN,MAAM,EAAE;IACV,CAAC,CAAC;IAEF,IAAIP,QAAQ,CAACE,EAAE,EAAE;MACf,MAAM,IAAI,CAACN,eAAe,CAAC,CAAC;IAC9B;IAEA,IAAI,CAACF,UAAU,CAAC,KAAK,CAAC;EACxB;AACF;AAEA,eAAeH,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}