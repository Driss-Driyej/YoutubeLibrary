{"ast":null,"code":"const API_KEY = 'AIzaSyBeCHn2Ewkv7K2-AomWOHFhXSkWadbR5O0';\nconst BASE_URL = 'https://www.googleapis.com/youtube/v3';\nconst fetchVideoDetails = async videoId => {\n  const response = await fetch(`${BASE_URL}/videos?part=id&id=${videoId}&key=${API_KEY}`);\n  if (!response.ok) {\n    throw new Error('Network response was not ok');\n  }\n  const data = await response.json();\n  return data.items.length > 0;\n};\nexport { fetchVideoDetails };","map":{"version":3,"names":["API_KEY","BASE_URL","fetchVideoDetails","videoId","response","fetch","ok","Error","data","json","items","length"],"sources":["C:/Users/Driss/OneDrive/Documents/Youtube_Library/youtube_library/src/model/videoPlaybackModel.ts"],"sourcesContent":["const API_KEY = 'AIzaSyBeCHn2Ewkv7K2-AomWOHFhXSkWadbR5O0';\r\nconst BASE_URL = 'https://www.googleapis.com/youtube/v3';\r\n\r\ninterface VideoDetailsResponse {\r\n  items: Array<{\r\n    id: string;\r\n  }>;\r\n}\r\n\r\nconst fetchVideoDetails = async (videoId: string): Promise<boolean> => {\r\n  const response = await fetch(`${BASE_URL}/videos?part=id&id=${videoId}&key=${API_KEY}`);\r\n  if (!response.ok) {\r\n    throw new Error('Network response was not ok');\r\n  }\r\n  const data: VideoDetailsResponse = await response.json();\r\n  return data.items.length > 0;\r\n};\r\n\r\nexport { fetchVideoDetails };\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,yCAAyC;AACzD,MAAMC,QAAQ,GAAG,uCAAuC;AAQxD,MAAMC,iBAAiB,GAAG,MAAOC,OAAe,IAAuB;EACrE,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,sBAAsBE,OAAO,QAAQH,OAAO,EAAE,CAAC;EACvF,IAAI,CAACI,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;EACA,MAAMC,IAA0B,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EACxD,OAAOD,IAAI,CAACE,KAAK,CAACC,MAAM,GAAG,CAAC;AAC9B,CAAC;AAED,SAAST,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}