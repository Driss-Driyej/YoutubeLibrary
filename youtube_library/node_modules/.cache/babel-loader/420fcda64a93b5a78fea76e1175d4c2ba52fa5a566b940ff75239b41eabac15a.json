{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Driss\\\\OneDrive\\\\Documents\\\\Youtube_Library\\\\youtube_library\\\\src\\\\view\\\\LibraryView.tsx\";\nimport React from 'react';\nimport MyVideoView from './MyVideoView';\nimport '../css/library.css';\n\n// Types des éléments du tableau vidéos sélectionné (videoSelected) et des éléments du tableau vidéos (userVideos) de la base de données\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Composant qui affiche l'élément de gauche de la vue \nclass LibraryView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userVideos: [],\n      isLoading: false\n    };\n    this.handleVideoDelete = this.handleVideoDelete.bind(this);\n  }\n  componentDidMount() {\n    this.fetchUserVideos();\n  }\n  async fetchUserVideos() {\n    const {\n      username\n    } = this.props;\n    const response = await fetch(`http://localhost:3001/api/user/${username}/videos`);\n    if (response.ok) {\n      const userVideos = await response.json();\n      this.setState({\n        userVideos\n      });\n    }\n  }\n  async handleVideoDelete(videoId) {\n    const {\n      username\n    } = this.props;\n    this.setState({\n      isLoading: true\n    });\n    const response = await fetch(`http://localhost:3001/api/library/${username}/videos/${videoId}`, {\n      method: 'DELETE'\n    });\n    if (response.ok) {\n      await this.fetchUserVideos(); // Rafraîchir la liste des vidéos après la suppression\n    }\n    this.setState({\n      isLoading: false\n    });\n  }\n  render() {\n    const {\n      username,\n      displayFormOnClick,\n      libraryItemOnClick\n    } = this.props;\n    const {\n      userVideos,\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"library-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"library-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Library \", username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"display-form\",\n        onClick: displayFormOnClick,\n        children: \"[+]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"library-items\",\n        children: userVideos.map(video => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"library-item\",\n          children: /*#__PURE__*/_jsxDEV(MyVideoView, {\n            libraryItemOnClick: libraryItemOnClick,\n            video: video,\n            onDelete: () => this.handleVideoDelete(video.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this)\n        }, video.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default LibraryView;","map":{"version":3,"names":["React","MyVideoView","jsxDEV","_jsxDEV","LibraryView","Component","constructor","props","state","userVideos","isLoading","handleVideoDelete","bind","componentDidMount","fetchUserVideos","username","response","fetch","ok","json","setState","videoId","method","render","displayFormOnClick","libraryItemOnClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","video","onDelete","id"],"sources":["C:/Users/Driss/OneDrive/Documents/Youtube_Library/youtube_library/src/view/LibraryView.tsx"],"sourcesContent":["import React from 'react';\r\nimport MyVideoView from './MyVideoView';\r\nimport '../css/library.css';\r\n\r\n// Types des éléments du tableau vidéos sélectionné (videoSelected) et des éléments du tableau vidéos (userVideos) de la base de données\r\ninterface Video {\r\n  title: string;\r\n  id: string;\r\n}\r\n\r\ninterface LibraryViewProps {\r\n  username: string;\r\n  displayFormOnClick: (event: React.FormEvent<HTMLButtonElement>) => void; // Type de la fonction displayFormOnClick donnée en argument\r\n  libraryItemOnClick: (event: React.FormEvent<HTMLButtonElement>, video: Video) => void; // Type de la fonction libraryItemOnClick donnée en argument\r\n}\r\n\r\ninterface LibraryViewState {\r\n  userVideos: Video[];\r\n  isLoading: boolean;\r\n}\r\n\r\n// Composant qui affiche l'élément de gauche de la vue \r\nclass LibraryView extends React.Component<LibraryViewProps, LibraryViewState> {\r\n  constructor(props: LibraryViewProps) {\r\n    super(props);\r\n    this.state = { userVideos: [], isLoading: false };\r\n\r\n    this.handleVideoDelete = this.handleVideoDelete.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUserVideos();\r\n  }\r\n\r\n  async fetchUserVideos() {\r\n    const { username } = this.props;\r\n    const response = await fetch(`http://localhost:3001/api/user/${username}/videos`);\r\n    if (response.ok) {\r\n      const userVideos = await response.json();\r\n      this.setState({ userVideos });\r\n    }\r\n  }\r\n\r\n  async handleVideoDelete(videoId: string) {\r\n    const { username } = this.props;\r\n    this.setState({ isLoading: true });\r\n\r\n    const response = await fetch(`http://localhost:3001/api/library/${username}/videos/${videoId}`, {\r\n      method: 'DELETE',\r\n    });\r\n\r\n    if (response.ok) {\r\n      await this.fetchUserVideos(); // Rafraîchir la liste des vidéos après la suppression\r\n    }\r\n\r\n    this.setState({ isLoading: false });\r\n  }\r\n\r\n  render() {\r\n    const { username, displayFormOnClick, libraryItemOnClick } = this.props;\r\n    const { userVideos, isLoading } = this.state;\r\n\r\n    return (\r\n      <div className=\"library-container\">\r\n        <div className=\"library-header\">\r\n          <h1>Library {username}</h1>\r\n        </div>\r\n        <button className=\"display-form\" onClick={displayFormOnClick}>[+]</button>\r\n        {isLoading ? (\r\n          <p>Loading...</p>\r\n        ) : (\r\n          <div className=\"library-items\">\r\n            {userVideos.map((video) => (\r\n              <li key={video.id} className=\"library-item\">\r\n                <MyVideoView \r\n                  libraryItemOnClick={libraryItemOnClick} \r\n                  video={video} \r\n                  onDelete={() => this.handleVideoDelete(video.id)} \r\n                />\r\n              </li>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LibraryView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}