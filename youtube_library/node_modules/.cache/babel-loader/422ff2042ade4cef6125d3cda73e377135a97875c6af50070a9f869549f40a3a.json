{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Driss\\\\OneDrive\\\\Documents\\\\Youtube_Library\\\\youtube_library\\\\src\\\\App.tsx\";\nimport React from 'react';\nimport LibraryView from './view/LibraryView';\nimport MainPanelView from './view/MainPanelView';\nimport './css/App.css';\n\n// types des éléments du tableau vidéos selectionné (videoSelected)\n\n// type du nom de l'utilisateur\n\n// types des variables d'état\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.libraryRef = void 0;\n    this.state = {\n      showSearchForm: true,\n      videoSelected: null\n    };\n    this.libraryRef = /*#__PURE__*/React.createRef();\n    this.displaySearchForm = this.displaySearchForm.bind(this);\n    this.displayVideo = this.displayVideo.bind(this);\n    this.handleVideoAdd = this.handleVideoAdd.bind(this);\n  }\n\n  // Affiche le formulaire de recherche. Appelée lorsque l'utilisateur clique sur le bouton d'affichage du formulaire de recherche ([+]).\n  displaySearchForm(event) {\n    this.setState({\n      showSearchForm: true,\n      videoSelected: null\n    });\n  }\n\n  // Affiche la vidéo que l'utilisateur a séléctionnée dans sa librairie. Appelée lorsque l'utilisateur clique sur une des vidéos qu'il a dans sa librairie.\n  displayVideo(event, video) {\n    this.setState({\n      showSearchForm: false,\n      videoSelected: video\n    });\n  }\n\n  // Gère l'ajout de vidéo\n  async handleVideoAdd(video) {\n    const {\n      username\n    } = this.props;\n    const response = await fetch(`http://localhost:3001/api/library/${username}/videos`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(video)\n    });\n    if (response.ok) {\n      if (this.libraryRef.current) {\n        this.libraryRef.current.fetchUserVideos();\n      }\n    }\n  }\n  render() {\n    const {\n      showSearchForm,\n      videoSelected\n    } = this.state;\n    const {\n      username\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(LibraryView, {\n        ref: this.libraryRef,\n        username: username,\n        displayFormOnClick: this.displaySearchForm,\n        libraryItemOnClick: this.displayVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MainPanelView, {\n        showSearchForm: showSearchForm,\n        videoSelected: videoSelected,\n        onVideoAdd: this.handleVideoAdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","LibraryView","MainPanelView","jsxDEV","_jsxDEV","App","Component","constructor","props","libraryRef","state","showSearchForm","videoSelected","createRef","displaySearchForm","bind","displayVideo","handleVideoAdd","event","setState","video","username","response","fetch","method","headers","body","JSON","stringify","ok","current","fetchUserVideos","render","className","children","ref","displayFormOnClick","libraryItemOnClick","fileName","_jsxFileName","lineNumber","columnNumber","onVideoAdd"],"sources":["C:/Users/Driss/OneDrive/Documents/Youtube_Library/youtube_library/src/App.tsx"],"sourcesContent":["import React from 'react';\r\nimport LibraryView from './view/LibraryView';\r\nimport MainPanelView from './view/MainPanelView';\r\nimport './css/App.css';\r\n\r\n// types des éléments du tableau vidéos selectionné (videoSelected)\r\ninterface Video {\r\n  title: string;\r\n  id: string;\r\n}\r\n\r\n// type du nom de l'utilisateur\r\ninterface AppProps {\r\n  username: string;\r\n}\r\n\r\n// types des variables d'état\r\ninterface AppState {\r\n  showSearchForm: boolean;\r\n  videoSelected: Video | null;\r\n}\r\n\r\nclass App extends React.Component<AppProps, AppState> {\r\n  libraryRef: React.RefObject<any>;\r\n\r\n  constructor(props: AppProps) {\r\n    super(props);\r\n    this.state = { \r\n      showSearchForm: true, \r\n      videoSelected: null,\r\n    };\r\n    \r\n    this.libraryRef = React.createRef();\r\n    this.displaySearchForm = this.displaySearchForm.bind(this);\r\n    this.displayVideo = this.displayVideo.bind(this);\r\n    this.handleVideoAdd = this.handleVideoAdd.bind(this);\r\n  }\r\n\r\n  // Affiche le formulaire de recherche. Appelée lorsque l'utilisateur clique sur le bouton d'affichage du formulaire de recherche ([+]).\r\n  displaySearchForm(event: React.FormEvent<HTMLButtonElement>) {\r\n    this.setState({ showSearchForm: true, videoSelected: null });\r\n  }\r\n\r\n  // Affiche la vidéo que l'utilisateur a séléctionnée dans sa librairie. Appelée lorsque l'utilisateur clique sur une des vidéos qu'il a dans sa librairie.\r\n  displayVideo(event: React.FormEvent<HTMLButtonElement>, video: Video) {\r\n    this.setState({ showSearchForm: false, videoSelected: video });\r\n  }\r\n\r\n  // Gère l'ajout de vidéo\r\n  async handleVideoAdd(video: Video) {\r\n    const { username } = this.props;\r\n\r\n    const response = await fetch(`http://localhost:3001/api/library/${username}/videos`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(video),\r\n    });\r\n\r\n    if (response.ok) {\r\n      if (this.libraryRef.current) {\r\n        this.libraryRef.current.fetchUserVideos();\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { showSearchForm, videoSelected } = this.state;\r\n    const { username } = this.props;\r\n\r\n    return (\r\n      <div className=\"app-container\">\r\n        {/* Composant gauche de l'application. Il affiche : le nom de la librairie, le bouton d'affichage du formulaire, et les vidéos que l'utilisateur a dans sa librairie */}\r\n        <LibraryView ref={this.libraryRef} username={username} displayFormOnClick={this.displaySearchForm} libraryItemOnClick={this.displayVideo} />\r\n        {/* Composant droit de l'application. Il affiche (selon la valeur de la variable showSearchForm) : le formulaire de recherche ou la vidéo que l'utilisateur a sélectionnée (selon la variable videoSelected) */}\r\n        <MainPanelView showSearchForm={showSearchForm} videoSelected={videoSelected} onVideoAdd={this.handleVideoAdd} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,OAAOC,aAAa,MAAM,sBAAsB;AAChD,OAAO,eAAe;;AAEtB;;AAMA;;AAKA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMA,MAAMC,GAAG,SAASL,KAAK,CAACM,SAAS,CAAqB;EAGpDC,WAAWA,CAACC,KAAe,EAAE;IAC3B,KAAK,CAACA,KAAK,CAAC;IAAC,KAHfC,UAAU;IAIR,IAAI,CAACC,KAAK,GAAG;MACXC,cAAc,EAAE,IAAI;MACpBC,aAAa,EAAE;IACjB,CAAC;IAED,IAAI,CAACH,UAAU,gBAAGT,KAAK,CAACa,SAAS,CAAC,CAAC;IACnC,IAAI,CAACC,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,CAACC,IAAI,CAAC,IAAI,CAAC;IAC1D,IAAI,CAACC,YAAY,GAAG,IAAI,CAACA,YAAY,CAACD,IAAI,CAAC,IAAI,CAAC;IAChD,IAAI,CAACE,cAAc,GAAG,IAAI,CAACA,cAAc,CAACF,IAAI,CAAC,IAAI,CAAC;EACtD;;EAEA;EACAD,iBAAiBA,CAACI,KAAyC,EAAE;IAC3D,IAAI,CAACC,QAAQ,CAAC;MAAER,cAAc,EAAE,IAAI;MAAEC,aAAa,EAAE;IAAK,CAAC,CAAC;EAC9D;;EAEA;EACAI,YAAYA,CAACE,KAAyC,EAAEE,KAAY,EAAE;IACpE,IAAI,CAACD,QAAQ,CAAC;MAAER,cAAc,EAAE,KAAK;MAAEC,aAAa,EAAEQ;IAAM,CAAC,CAAC;EAChE;;EAEA;EACA,MAAMH,cAAcA,CAACG,KAAY,EAAE;IACjC,MAAM;MAAEC;IAAS,CAAC,GAAG,IAAI,CAACb,KAAK;IAE/B,MAAMc,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqCF,QAAQ,SAAS,EAAE;MACnFG,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,KAAK;IAC5B,CAAC,CAAC;IAEF,IAAIE,QAAQ,CAACO,EAAE,EAAE;MACf,IAAI,IAAI,CAACpB,UAAU,CAACqB,OAAO,EAAE;QAC3B,IAAI,CAACrB,UAAU,CAACqB,OAAO,CAACC,eAAe,CAAC,CAAC;MAC3C;IACF;EACF;EAEAC,MAAMA,CAAA,EAAG;IACP,MAAM;MAAErB,cAAc;MAAEC;IAAc,CAAC,GAAG,IAAI,CAACF,KAAK;IACpD,MAAM;MAAEW;IAAS,CAAC,GAAG,IAAI,CAACb,KAAK;IAE/B,oBACEJ,OAAA;MAAK6B,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAE5B9B,OAAA,CAACH,WAAW;QAACkC,GAAG,EAAE,IAAI,CAAC1B,UAAW;QAACY,QAAQ,EAAEA,QAAS;QAACe,kBAAkB,EAAE,IAAI,CAACtB,iBAAkB;QAACuB,kBAAkB,EAAE,IAAI,CAACrB;MAAa;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAE5IrC,OAAA,CAACF,aAAa;QAACS,cAAc,EAAEA,cAAe;QAACC,aAAa,EAAEA,aAAc;QAAC8B,UAAU,EAAE,IAAI,CAACzB;MAAe;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7G,CAAC;EAEV;AACF;AAEA,eAAepC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}