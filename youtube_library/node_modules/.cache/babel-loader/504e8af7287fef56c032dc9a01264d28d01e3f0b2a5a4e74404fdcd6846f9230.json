{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Driss\\\\OneDrive\\\\Documents\\\\Youtube_Library\\\\youtube_library\\\\src\\\\view\\\\VideoPlaybackView.tsx\";\nimport React from 'react';\nimport '../css/videoPlayback.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass VideoPlaybackView extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.fetchVideo = async () => {\n      const {\n        videoId\n      } = this.props;\n      const exists = await checkVideoExists(videoId);\n      if (exists) {\n        const videoIframe = document.getElementById('videoIframe');\n        videoIframe.src = `https://www.youtube.com/embed/${videoId}`;\n      } else {\n        alert('Video not found');\n      }\n    };\n  }\n  componentDidMount() {\n    this.fetchVideo();\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.videoId !== prevProps.videoId) {\n      this.fetchVideo();\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"video-title\",\n          children: \"Titre de la video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n          id: \"videoIframe\",\n          frameBorder: \"0\",\n          allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n          allowFullScreen: true,\n          title: \"YouTube video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default VideoPlaybackView;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","VideoPlaybackView","Component","constructor","args","fetchVideo","videoId","props","exists","checkVideoExists","videoIframe","document","getElementById","src","alert","componentDidMount","componentDidUpdate","prevProps","render","children","className","fileName","_jsxFileName","lineNumber","columnNumber","id","frameBorder","allow","allowFullScreen","title"],"sources":["C:/Users/Driss/OneDrive/Documents/Youtube_Library/youtube_library/src/view/VideoPlaybackView.tsx"],"sourcesContent":["import React from 'react';\r\nimport '../css/videoPlayback.css';\r\n\r\ninterface VideoPlaybackViewProps {\r\n  videoId: string;\r\n}\r\n\r\nclass VideoPlaybackView extends React.Component<VideoPlaybackViewProps> {\r\n  componentDidMount() {\r\n    this.fetchVideo();\r\n  }\r\n\r\n  componentDidUpdate(prevProps: VideoPlaybackViewProps) {\r\n    if (this.props.videoId !== prevProps.videoId) {\r\n      this.fetchVideo();\r\n    }\r\n  }\r\n\r\n  fetchVideo = async () => {\r\n    const { videoId } = this.props;\r\n    const exists = await checkVideoExists(videoId);\r\n    if (exists) {\r\n      const videoIframe = document.getElementById('videoIframe') as HTMLIFrameElement;\r\n      videoIframe.src = `https://www.youtube.com/embed/${videoId}`;\r\n    } else {\r\n      alert('Video not found');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n\r\n          <h1 className=\"video-title\" >Titre de la video</h1>\r\n\r\n        <iframe\r\n          id=\"videoIframe\"\r\n          frameBorder=\"0\"\r\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n          allowFullScreen\r\n          title=\"YouTube video\"\r\n        ></iframe>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VideoPlaybackView;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMlC,MAAMC,iBAAiB,SAASH,KAAK,CAACI,SAAS,CAAyB;EAAAC,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAWtEC,UAAU,GAAG,YAAY;MACvB,MAAM;QAAEC;MAAQ,CAAC,GAAG,IAAI,CAACC,KAAK;MAC9B,MAAMC,MAAM,GAAG,MAAMC,gBAAgB,CAACH,OAAO,CAAC;MAC9C,IAAIE,MAAM,EAAE;QACV,MAAME,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAsB;QAC/EF,WAAW,CAACG,GAAG,GAAG,iCAAiCP,OAAO,EAAE;MAC9D,CAAC,MAAM;QACLQ,KAAK,CAAC,iBAAiB,CAAC;MAC1B;IACF,CAAC;EAAA;EAnBDC,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAACV,UAAU,CAAC,CAAC;EACnB;EAEAW,kBAAkBA,CAACC,SAAiC,EAAE;IACpD,IAAI,IAAI,CAACV,KAAK,CAACD,OAAO,KAAKW,SAAS,CAACX,OAAO,EAAE;MAC5C,IAAI,CAACD,UAAU,CAAC,CAAC;IACnB;EACF;EAaAa,MAAMA,CAAA,EAAG;IACP,oBACElB,OAAA;MAAAmB,QAAA,eACEnB,OAAA;QAAAmB,QAAA,gBAEEnB,OAAA;UAAIoB,SAAS,EAAC,aAAa;UAAAD,QAAA,EAAE;QAAiB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAErDxB,OAAA;UACEyB,EAAE,EAAC,aAAa;UAChBC,WAAW,EAAC,GAAG;UACfC,KAAK,EAAC,0FAA0F;UAChGC,eAAe;UACfC,KAAK,EAAC;QAAe;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;AACF;AAEA,eAAevB,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}