{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Driss\\\\OneDrive\\\\Documents\\\\Youtube_Library\\\\youtube_library\\\\src\\\\App.tsx\";\nimport React from 'react';\nimport LibraryView from './view/LibraryView';\nimport MainPanelView from './view/MainPanelView';\nimport './css/App.css';\n\n// Types des éléments du tableau vidéos selectionné (videoSelected)\n\n// Type du nom de l'utilisateur\n\n// Types des variables d'état\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSearchForm: true,\n      videoSelected: null,\n      userVideos: [],\n      isLoading: false\n    };\n    this.displaySearchForm = this.displaySearchForm.bind(this);\n    this.displayVideo = this.displayVideo.bind(this);\n    this.handleVideoAdd = this.handleVideoAdd.bind(this);\n    this.handleVideoDelete = this.handleVideoDelete.bind(this);\n    this.fetchUserVideos = this.fetchUserVideos.bind(this);\n  }\n  componentDidMount() {\n    this.fetchUserVideos();\n  }\n  async fetchUserVideos() {\n    const {\n      username\n    } = this.props;\n    if (this.state.isLoading) {\n      await new Promise(resolve => setTimeout(resolve, 100));\n    }\n    const response = await fetch(`http://localhost:3001/api/user/${username}/videos`);\n    if (response.ok) {\n      const userVideos = await response.json();\n      this.setState({\n        userVideos\n      });\n    }\n  }\n  async handleVideoAdd(video) {\n    const {\n      username\n    } = this.props;\n    this.setState({\n      isLoading: true\n    });\n    const response = await fetch(`http://localhost:3001/api/library/${username}/videos`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(video)\n    });\n    if (response.ok) {\n      await this.fetchUserVideos();\n    }\n    this.setState({\n      isLoading: false\n    });\n  }\n  async handleVideoDelete(videoId) {\n    const {\n      username\n    } = this.props;\n    this.setState({\n      isLoading: true\n    });\n    const response = await fetch(`http://localhost:3001/api/library/${username}/videos/${videoId}`, {\n      method: 'DELETE'\n    });\n    if (response.ok) {\n      await this.fetchUserVideos(); // Rafraîchir la liste des vidéos après la suppression\n    }\n    this.setState({\n      isLoading: false\n    });\n  }\n  displaySearchForm(event) {\n    this.setState({\n      showSearchForm: true,\n      videoSelected: null\n    });\n  }\n  displayVideo(event, video) {\n    this.setState({\n      showSearchForm: false,\n      videoSelected: video\n    });\n  }\n  render() {\n    const {\n      showSearchForm,\n      videoSelected,\n      userVideos,\n      isLoading\n    } = this.state;\n    const {\n      username\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(LibraryView, {\n        username: username,\n        userVideos: userVideos,\n        isLoading: isLoading,\n        displayFormOnClick: this.displaySearchForm,\n        libraryItemOnClick: this.displayVideo,\n        onDeleteVideo: this.handleVideoDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MainPanelView, {\n        showSearchForm: showSearchForm,\n        videoSelected: videoSelected,\n        onAddVideo: this.handleVideoAdd,\n        isLoading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","LibraryView","MainPanelView","jsxDEV","_jsxDEV","App","Component","constructor","props","state","showSearchForm","videoSelected","userVideos","isLoading","displaySearchForm","bind","displayVideo","handleVideoAdd","handleVideoDelete","fetchUserVideos","componentDidMount","username","Promise","resolve","setTimeout","response","fetch","ok","json","setState","video","method","headers","body","JSON","stringify","videoId","event","render","className","children","displayFormOnClick","libraryItemOnClick","onDeleteVideo","fileName","_jsxFileName","lineNumber","columnNumber","onAddVideo"],"sources":["C:/Users/Driss/OneDrive/Documents/Youtube_Library/youtube_library/src/App.tsx"],"sourcesContent":["import React from 'react';\r\nimport LibraryView from './view/LibraryView';\r\nimport MainPanelView from './view/MainPanelView';\r\nimport './css/App.css';\r\n\r\n// Types des éléments du tableau vidéos selectionné (videoSelected)\r\ninterface Video {\r\n  title: string;\r\n  id: string;\r\n}\r\n\r\n// Type du nom de l'utilisateur\r\ninterface AppProps {\r\n  username: string;\r\n}\r\n\r\n// Types des variables d'état\r\ninterface AppState {\r\n  showSearchForm: boolean;\r\n  videoSelected: Video | null;\r\n  userVideos: Video[];\r\n  isLoading: boolean;\r\n}\r\n\r\nclass App extends React.Component<AppProps, AppState> {\r\n  constructor(props: AppProps) {\r\n    super(props);\r\n    this.state = { \r\n      showSearchForm: true, \r\n      videoSelected: null,\r\n      userVideos: [],\r\n      isLoading: false\r\n    };\r\n    \r\n    this.displaySearchForm = this.displaySearchForm.bind(this);\r\n    this.displayVideo = this.displayVideo.bind(this);\r\n    this.handleVideoAdd = this.handleVideoAdd.bind(this);\r\n    this.handleVideoDelete = this.handleVideoDelete.bind(this);\r\n    this.fetchUserVideos = this.fetchUserVideos.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUserVideos();\r\n  }\r\n\r\n  async fetchUserVideos() {\r\n    const { username } = this.props;\r\n    if (this.state.isLoading) {\r\n      await new Promise(resolve => setTimeout(resolve, 100));\r\n    }\r\n    const response = await fetch(`http://localhost:3001/api/user/${username}/videos`);\r\n    if (response.ok) {\r\n      const userVideos = await response.json();\r\n      this.setState({ userVideos });\r\n    }\r\n  }\r\n  async handleVideoAdd(video: Video) {\r\n    const { username } = this.props;\r\n    this.setState({ isLoading: true });\r\n    const response = await fetch(`http://localhost:3001/api/library/${username}/videos`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(video),\r\n    });\r\n\r\n    if (response.ok) {\r\n      await this.fetchUserVideos();\r\n    } \r\n    this.setState({ isLoading: false });\r\n  }\r\n\r\n  async handleVideoDelete(videoId: string) {\r\n    const { username } = this.props;\r\n    this.setState({ isLoading: true });\r\n\r\n    const response = await fetch(`http://localhost:3001/api/library/${username}/videos/${videoId}`, {\r\n      method: 'DELETE',\r\n    });\r\n\r\n    if (response.ok) {\r\n      await this.fetchUserVideos(); // Rafraîchir la liste des vidéos après la suppression\r\n    }\r\n\r\n    this.setState({ isLoading: false });\r\n  }\r\n\r\n  displaySearchForm(event: React.FormEvent<HTMLButtonElement>) {\r\n    this.setState({ showSearchForm: true, videoSelected: null });\r\n  }\r\n\r\n  displayVideo(event: React.FormEvent<HTMLButtonElement>, video: Video) {\r\n    this.setState({ showSearchForm: false, videoSelected: video });\r\n  }\r\n\r\n  render() {\r\n    const { showSearchForm, videoSelected, userVideos, isLoading } = this.state;\r\n    const { username } = this.props;\r\n\r\n    return (\r\n      <div className=\"app-container\">\r\n        <LibraryView \r\n          username={username} \r\n          userVideos={userVideos}\r\n          isLoading={isLoading}\r\n          displayFormOnClick={this.displaySearchForm} \r\n          libraryItemOnClick={this.displayVideo} \r\n          onDeleteVideo={this.handleVideoDelete} \r\n        />\r\n        <MainPanelView \r\n          showSearchForm={showSearchForm} \r\n          videoSelected={videoSelected} \r\n          onAddVideo={this.handleVideoAdd}\r\n          isLoading={isLoading}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}