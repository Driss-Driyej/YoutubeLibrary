{"ast":null,"code":"import { fetchVideoDetails } from '../model/videoPlaybackModel';\nconst checkVideoExists = async videoId => {\n  try {\n    return await fetchVideoDetails(videoId);\n  } catch (error) {\n    console.error('Error fetching video details:', error);\n    return false;\n  }\n};\nexport { checkVideoExists };","map":{"version":3,"names":["fetchVideoDetails","checkVideoExists","videoId","error","console"],"sources":["C:/Users/Driss/OneDrive/Documents/Youtube_Library/youtube_library/src/controller/videoPlaybackController.ts"],"sourcesContent":["import { fetchVideoDetails } from '../model/videoPlaybackModel';\r\n\r\nconst checkVideoExists = async (videoId: string): Promise<boolean> => {\r\n  try {\r\n    return await fetchVideoDetails(videoId);\r\n  } catch (error) {\r\n    console.error('Error fetching video details:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport { checkVideoExists };\r\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,6BAA6B;AAE/D,MAAMC,gBAAgB,GAAG,MAAOC,OAAe,IAAuB;EACpE,IAAI;IACF,OAAO,MAAMF,iBAAiB,CAACE,OAAO,CAAC;EACzC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,OAAO,KAAK;EACd;AACF,CAAC;AAED,SAASF,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}