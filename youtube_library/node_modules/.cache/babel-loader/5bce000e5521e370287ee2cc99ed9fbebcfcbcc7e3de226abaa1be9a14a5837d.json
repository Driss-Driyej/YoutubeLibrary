{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Driss\\\\OneDrive\\\\Documents\\\\Youtube_Library\\\\youtube_library\\\\src\\\\view\\\\LibraryView.tsx\";\nimport React from 'react';\nimport MyVideoView from './MyVideoView';\nimport '../css/library.css';\n\n// Types des éléments du tableau vidéos sélectionné (videoSelected) et des éléments du tableau vidéos (userVideos) de la base de données\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Composant qui affiche l'élément de gauche de la vue \nclass LibraryView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userVideos: []\n    };\n    this.handleVideoDelete = this.handleVideoDelete.bind(this);\n  }\n  componentDidMount() {\n    this.fetchUserVideos();\n  }\n  async fetchUserVideos() {\n    const {\n      username\n    } = this.props;\n    try {\n      console.log(`Fetching videos for user: ${username}`);\n      const response = await fetch(`http://localhost:3001/api/user/${username}/videos`);\n      console.log(`Response status: ${response.status}`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      // Vérifier si la réponse est en JSON\n      const contentType = response.headers.get('content-type');\n      console.log(`Content-Type: ${contentType}`);\n      if (!contentType || !contentType.includes('application/json')) {\n        throw new TypeError('Received non-JSON response');\n      }\n      const userVideos = await response.json();\n      console.log(`User videos:`, userVideos);\n      this.setState({\n        userVideos\n      });\n    } catch (error) {\n      console.error('Error fetching user videos:', error);\n    }\n  }\n  async handleVideoDelete(videoId) {\n    const {\n      username\n    } = this.props;\n    try {\n      console.log(`Deleting video with ID: ${videoId} for user: ${username}`);\n      const response = await fetch(`http://localhost:3001/api/library/${username}/videos/${videoId}`, {\n        method: 'DELETE'\n      });\n      console.log(`Response status: ${response.status}`);\n      if (!response.ok) {\n        throw new Error('Failed to delete video');\n      }\n      console.log('Video deleted successfully');\n      await this.fetchUserVideos(); // Rafraîchir la liste des vidéos après la suppression\n      console.log('State updated after deleting video');\n    } catch (error) {\n      console.error('Error deleting video:', error);\n    }\n  }\n  render() {\n    const {\n      username,\n      displayFormOnClick,\n      libraryItemOnClick\n    } = this.props;\n    const {\n      userVideos\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"library-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"library-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Library \", username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"display-form\",\n        onClick: displayFormOnClick,\n        children: \"[+]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"library-items\",\n        children: userVideos.map(video => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"library-item\",\n          children: /*#__PURE__*/_jsxDEV(MyVideoView, {\n            libraryItemOnClick: libraryItemOnClick,\n            video: video,\n            onDelete: () => this.handleVideoDelete(video.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)\n        }, video.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default LibraryView;","map":{"version":3,"names":["React","MyVideoView","jsxDEV","_jsxDEV","LibraryView","Component","constructor","props","state","userVideos","handleVideoDelete","bind","componentDidMount","fetchUserVideos","username","console","log","response","fetch","status","ok","Error","contentType","headers","get","includes","TypeError","json","setState","error","videoId","method","render","displayFormOnClick","libraryItemOnClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","video","onDelete","id"],"sources":["C:/Users/Driss/OneDrive/Documents/Youtube_Library/youtube_library/src/view/LibraryView.tsx"],"sourcesContent":["import React from 'react';\r\nimport MyVideoView from './MyVideoView';\r\nimport '../css/library.css';\r\n\r\n// Types des éléments du tableau vidéos sélectionné (videoSelected) et des éléments du tableau vidéos (userVideos) de la base de données\r\ninterface Video {\r\n  title: string;\r\n  id: string;\r\n}\r\n\r\ninterface LibraryViewProps {\r\n  username: string;\r\n  displayFormOnClick: (event: React.FormEvent<HTMLButtonElement>) => void; // Type de la fonction displayFormOnClick donnée en argument\r\n  libraryItemOnClick: (event: React.FormEvent<HTMLButtonElement>, video: Video) => void; // Type de la fonction libraryItemOnClick donnée en argument\r\n}\r\n\r\ninterface LibraryViewState {\r\n  userVideos: Video[];\r\n}\r\n\r\n// Composant qui affiche l'élément de gauche de la vue \r\nclass LibraryView extends React.Component<LibraryViewProps, LibraryViewState> {\r\n  constructor(props: LibraryViewProps) {\r\n    super(props);\r\n    this.state = { userVideos: [] };\r\n\r\n    this.handleVideoDelete = this.handleVideoDelete.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUserVideos();\r\n  }\r\n\r\n  async fetchUserVideos() {\r\n    const { username } = this.props;\r\n    try {\r\n      console.log(`Fetching videos for user: ${username}`);\r\n      const response = await fetch(`http://localhost:3001/api/user/${username}/videos`);\r\n      console.log(`Response status: ${response.status}`);\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n\r\n      // Vérifier si la réponse est en JSON\r\n      const contentType = response.headers.get('content-type');\r\n      console.log(`Content-Type: ${contentType}`);\r\n      if (!contentType || !contentType.includes('application/json')) {\r\n        throw new TypeError('Received non-JSON response');\r\n      }\r\n\r\n      const userVideos = await response.json();\r\n      console.log(`User videos:`, userVideos);\r\n      this.setState({ userVideos });\r\n    } catch (error) {\r\n      console.error('Error fetching user videos:', error);\r\n    }\r\n  }\r\n\r\n  async handleVideoDelete(videoId: string) {\r\n    const { username } = this.props;\r\n    try {\r\n      console.log(`Deleting video with ID: ${videoId} for user: ${username}`);\r\n      const response = await fetch(`http://localhost:3001/api/library/${username}/videos/${videoId}`, {\r\n        method: 'DELETE',\r\n      });\r\n      console.log(`Response status: ${response.status}`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to delete video');\r\n      }\r\n      console.log('Video deleted successfully');\r\n      await this.fetchUserVideos(); // Rafraîchir la liste des vidéos après la suppression\r\n      console.log('State updated after deleting video');\r\n    } catch (error) {\r\n      console.error('Error deleting video:', error);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { username, displayFormOnClick, libraryItemOnClick } = this.props;\r\n    const { userVideos } = this.state;\r\n\r\n    return (\r\n      <div className=\"library-container\">\r\n        <div className=\"library-header\">\r\n          <h1>Library {username}</h1>\r\n        </div>\r\n        <button className=\"display-form\" onClick={displayFormOnClick}>[+]</button>\r\n        <div className=\"library-items\">\r\n          {userVideos.map((video) => (\r\n            <li key={video.id} className=\"library-item\">\r\n              <MyVideoView \r\n                libraryItemOnClick={libraryItemOnClick} \r\n                video={video} \r\n                onDelete={() => this.handleVideoDelete(video.id)} \r\n              />\r\n            </li>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LibraryView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}