{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Driss\\\\OneDrive\\\\Documents\\\\Youtube_Library\\\\youtube_library\\\\src\\\\view\\\\LibraryView.tsx\";\nimport React from 'react';\nimport MyVideoView from './MyVideoView';\nimport '../css/library.css';\n\n// Types des éléments du tableau vidéos sélectionné (videoSelected) et des éléments du tableau vidéos (userVideos) de la base de données\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Composant qui affiche l'élément de gauche de la vue \nclass LibraryView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userVideos: []\n    };\n    this.handleVideoDelete = this.handleVideoDelete.bind(this);\n  }\n  componentDidMount() {\n    this.fetchUserVideos();\n  }\n  async fetchUserVideos() {\n    const {\n      username\n    } = this.props;\n    try {\n      const response = await fetch(`/api/user/${username}/videos`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      // Vérifier si la réponse est en JSON\n      const contentType = response.headers.get('content-type');\n      if (!contentType || !contentType.includes('application/json')) {\n        throw new TypeError('Received non-JSON response');\n      }\n      const userVideos = await response.json();\n      this.setState({\n        userVideos\n      });\n    } catch (error) {\n      console.error('Error fetching user videos:', error);\n    }\n  }\n  async handleVideoDelete(videoId) {\n    const {\n      username\n    } = this.props;\n    try {\n      const response = await fetch(`/api/library/${username}/videos/${videoId}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error('Failed to delete video');\n      }\n      this.fetchUserVideos(); // Rafraîchir la liste des vidéos après la suppression\n    } catch (error) {\n      console.error('Error deleting video:', error);\n    }\n  }\n  render() {\n    const {\n      username,\n      displayFormOnClick,\n      libraryItemOnClick\n    } = this.props;\n    const {\n      userVideos\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"library-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"library-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Library \", username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"display-form\",\n        onClick: displayFormOnClick,\n        children: \"[+]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"library-items\",\n        children: userVideos.map(video => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"library-item\",\n          children: /*#__PURE__*/_jsxDEV(MyVideoView, {\n            libraryItemOnClick: libraryItemOnClick,\n            video: video,\n            onDelete: () => this.handleVideoDelete(video.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, video.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default LibraryView;","map":{"version":3,"names":["React","MyVideoView","jsxDEV","_jsxDEV","LibraryView","Component","constructor","props","state","userVideos","handleVideoDelete","bind","componentDidMount","fetchUserVideos","username","response","fetch","ok","Error","contentType","headers","get","includes","TypeError","json","setState","error","console","videoId","method","render","displayFormOnClick","libraryItemOnClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","video","onDelete","id"],"sources":["C:/Users/Driss/OneDrive/Documents/Youtube_Library/youtube_library/src/view/LibraryView.tsx"],"sourcesContent":["import React from 'react';\r\nimport MyVideoView from './MyVideoView';\r\nimport '../css/library.css';\r\n\r\n// Types des éléments du tableau vidéos sélectionné (videoSelected) et des éléments du tableau vidéos (userVideos) de la base de données\r\ninterface Video {\r\n  title: string;\r\n  id: string;\r\n}\r\n\r\ninterface LibraryViewProps {\r\n  username: string;\r\n  displayFormOnClick: (event: React.FormEvent<HTMLButtonElement>) => void; // Type de la fonction displayFormOnClick donnée en argument\r\n  libraryItemOnClick: (event: React.FormEvent<HTMLButtonElement>, video: Video) => void; // Type de la fonction libraryItemOnClick donnée en argument\r\n}\r\n\r\ninterface LibraryViewState {\r\n  userVideos: Video[];\r\n}\r\n\r\n// Composant qui affiche l'élément de gauche de la vue \r\nclass LibraryView extends React.Component<LibraryViewProps, LibraryViewState> {\r\n  constructor(props: LibraryViewProps) {\r\n    super(props);\r\n    this.state = { userVideos: [] };\r\n\r\n    this.handleVideoDelete = this.handleVideoDelete.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUserVideos();\r\n  }\r\n\r\n  async fetchUserVideos() {\r\n    const { username } = this.props;\r\n    try {\r\n      const response = await fetch(`/api/user/${username}/videos`);\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n\r\n      // Vérifier si la réponse est en JSON\r\n      const contentType = response.headers.get('content-type');\r\n      if (!contentType || !contentType.includes('application/json')) {\r\n        throw new TypeError('Received non-JSON response');\r\n      }\r\n\r\n      const userVideos = await response.json();\r\n      this.setState({ userVideos });\r\n    } catch (error) {\r\n      console.error('Error fetching user videos:', error);\r\n    }\r\n  }\r\n\r\n  async handleVideoDelete(videoId: string) {\r\n    const { username } = this.props;\r\n    try {\r\n      const response = await fetch(`/api/library/${username}/videos/${videoId}`, {\r\n        method: 'DELETE',\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Failed to delete video');\r\n      }\r\n      this.fetchUserVideos(); // Rafraîchir la liste des vidéos après la suppression\r\n    } catch (error) {\r\n      console.error('Error deleting video:', error);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { username, displayFormOnClick, libraryItemOnClick } = this.props;\r\n    const { userVideos } = this.state;\r\n\r\n    return (\r\n      <div className=\"library-container\">\r\n        <div className=\"library-header\">\r\n          <h1>Library {username}</h1>\r\n        </div>\r\n        <button className=\"display-form\" onClick={displayFormOnClick}>[+]</button>\r\n        <div className=\"library-items\">\r\n          {userVideos.map((video) => (\r\n            <li key={video.id} className=\"library-item\">\r\n              <MyVideoView \r\n                libraryItemOnClick={libraryItemOnClick} \r\n                video={video} \r\n                onDelete={() => this.handleVideoDelete(video.id)} \r\n              />\r\n            </li>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LibraryView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}