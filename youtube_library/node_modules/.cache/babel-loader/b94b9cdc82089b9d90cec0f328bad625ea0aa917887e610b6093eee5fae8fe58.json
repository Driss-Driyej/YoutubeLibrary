{"ast":null,"code":"const API_KEY = 'AIzaSyBeCHn2Ewkv7K2-AomWOHFhXSkWadbR5O0';\nconst BASE_URL = 'https://www.googleapis.com/youtube/v3';\nclass videoPlaybackModel {}\nvideoPlaybackModel.fetchVideoDetails = async videoId => {\n  const response = await fetch(`${BASE_URL}/videos?part=id&id=${videoId}&key=${API_KEY}`);\n  if (!response.ok) {\n    throw new Error('Network response was not ok');\n  }\n  const data = await response.json();\n  return data.items.length > 0;\n};\n// fonction qui vérifie que la vidéo avec cet id existe\nvideoPlaybackModel.checkVideoExists = async videoId => {\n  try {\n    return await fetchVideoDetails(videoId);\n  } catch (error) {\n    console.error('Error fetching video details:', error);\n    return false;\n  }\n};\nexport default videoPlaybackModel;","map":{"version":3,"names":["API_KEY","BASE_URL","videoPlaybackModel","fetchVideoDetails","videoId","response","fetch","ok","Error","data","json","items","length","checkVideoExists","error","console"],"sources":["C:/Users/Driss/OneDrive/Documents/Youtube_Library/youtube_library/src/model/videoPlaybackModel.ts"],"sourcesContent":["const API_KEY = 'AIzaSyBeCHn2Ewkv7K2-AomWOHFhXSkWadbR5O0';\r\nconst BASE_URL = 'https://www.googleapis.com/youtube/v3';\r\n\r\ninterface VideoDetailsResponse {\r\n  items: Array<{\r\n    id: string;\r\n  }>;\r\n}\r\n\r\nclass videoPlaybackModel {\r\n\r\nstatic fetchVideoDetails = async (videoId: string): Promise<boolean> => {\r\n  const response = await fetch(`${BASE_URL}/videos?part=id&id=${videoId}&key=${API_KEY}`);\r\n  if (!response.ok) {\r\n    throw new Error('Network response was not ok');\r\n  }\r\n  const data: VideoDetailsResponse = await response.json();\r\n  return data.items.length > 0;\r\n};\r\n\r\n// fonction qui vérifie que la vidéo avec cet id existe\r\nstatic checkVideoExists = async (videoId: string): Promise<boolean> => {\r\n  try {\r\n    return await fetchVideoDetails(videoId);\r\n  } catch (error) {\r\n    console.error('Error fetching video details:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n}\r\n\r\nexport default videoPlaybackModel;\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,yCAAyC;AACzD,MAAMC,QAAQ,GAAG,uCAAuC;AAQxD,MAAMC,kBAAkB,CAAC;AAAnBA,kBAAkB,CAEjBC,iBAAiB,GAAG,MAAOC,OAAe,IAAuB;EACtE,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,sBAAsBG,OAAO,QAAQJ,OAAO,EAAE,CAAC;EACvF,IAAI,CAACK,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;EACA,MAAMC,IAA0B,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EACxD,OAAOD,IAAI,CAACE,KAAK,CAACC,MAAM,GAAG,CAAC;AAC9B,CAAC;AAED;AAXMV,kBAAkB,CAYjBW,gBAAgB,GAAG,MAAOT,OAAe,IAAuB;EACrE,IAAI;IACF,OAAO,MAAMD,iBAAiB,CAACC,OAAO,CAAC;EACzC,CAAC,CAAC,OAAOU,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,OAAO,KAAK;EACd;AACF,CAAC;AAID,eAAeZ,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}