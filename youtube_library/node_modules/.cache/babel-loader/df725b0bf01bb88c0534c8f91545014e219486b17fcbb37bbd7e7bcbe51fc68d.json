{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Driss\\\\OneDrive\\\\Documents\\\\Youtube_Library\\\\youtube_library\\\\src\\\\view\\\\SearchFormView.tsx\";\nimport React from 'react';\nimport SearchBarView from './SearchBarView';\nimport SearchResultsView from './SearchResultsView';\nimport YoutubeApiModel from '../model/YoutubeApiModel';\n\n// Type de la variable d'état\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Composant qui affiche le formulaire de recherche\nclass SearchFormView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      results: []\n    }; // Variable qui contient le texte tapé par l'utilisateur dans la barre de recherche (SearchBarView)\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // Met à jour la variable d'état. Appelée lorsque l'utilisateur tape sur une touche dans la barre de recherche\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  // Applique la recherche de l'utilisateur. Appelée lorsque l'utilisateur clique sur le bouton [Search]\n  async handleSubmit(event) {\n    event.preventDefault();\n    const results = await YoutubeApiModel.searchYouTube(this.state.value);\n    this.setState({\n      results\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SearchBarView, {\n        value: this.state.value,\n        onChange: this.handleChange,\n        onSubmit: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SearchResultsView, {\n        results: this.state.results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default SearchFormView;","map":{"version":3,"names":["React","SearchBarView","SearchResultsView","YoutubeApiModel","jsxDEV","_jsxDEV","SearchFormView","Component","constructor","props","state","value","results","handleChange","bind","handleSubmit","event","setState","target","preventDefault","searchYouTube","render","children","onChange","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Driss/OneDrive/Documents/Youtube_Library/youtube_library/src/view/SearchFormView.tsx"],"sourcesContent":["import React from 'react';\r\nimport SearchBarView from './SearchBarView';\r\nimport SearchResultsView from './SearchResultsView';\r\nimport YoutubeApiModel from '../model/YoutubeApiModel';\r\n\r\n// Type de la variable d'état\r\ninterface SearchFormViewState {\r\n    value: string;\r\n    results: any[];\r\n}\r\n\r\n// Composant qui affiche le formulaire de recherche\r\nclass SearchFormView extends React.Component<{}, SearchFormViewState> {\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = { value: '', results: [] }; // Variable qui contient le texte tapé par l'utilisateur dans la barre de recherche (SearchBarView)\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    // Met à jour la variable d'état. Appelée lorsque l'utilisateur tape sur une touche dans la barre de recherche\r\n    handleChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        this.setState({ value: event.target.value });\r\n    }\r\n\r\n    // Applique la recherche de l'utilisateur. Appelée lorsque l'utilisateur clique sur le bouton [Search]\r\n    async handleSubmit(event: React.FormEvent<HTMLFormElement>) {\r\n        event.preventDefault();\r\n        const results = await YoutubeApiModel.searchYouTube(this.state.value);\r\n        this.setState({ results });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* Affiche la barre de recherche avec son bouton rechercher */}\r\n                <SearchBarView value={this.state.value} onChange={this.handleChange} onSubmit={this.handleSubmit} />\r\n                {/* Affiche les résultats de la recherche */}\r\n                <SearchResultsView results={this.state.results} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchFormView;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,eAAe,MAAM,0BAA0B;;AAEtD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMA;AACA,MAAMC,cAAc,SAASN,KAAK,CAACO,SAAS,CAA0B;EAClEC,WAAWA,CAACC,KAAS,EAAE;IACnB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MAAEC,KAAK,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAG,CAAC,CAAC,CAAC;;IAEzC,IAAI,CAACC,YAAY,GAAG,IAAI,CAACA,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC;IAChD,IAAI,CAACC,YAAY,GAAG,IAAI,CAACA,YAAY,CAACD,IAAI,CAAC,IAAI,CAAC;EACpD;;EAEA;EACAD,YAAYA,CAACG,KAA0C,EAAE;IACrD,IAAI,CAACC,QAAQ,CAAC;MAAEN,KAAK,EAAEK,KAAK,CAACE,MAAM,CAACP;IAAM,CAAC,CAAC;EAChD;;EAEA;EACA,MAAMI,YAAYA,CAACC,KAAuC,EAAE;IACxDA,KAAK,CAACG,cAAc,CAAC,CAAC;IACtB,MAAMP,OAAO,GAAG,MAAMT,eAAe,CAACiB,aAAa,CAAC,IAAI,CAACV,KAAK,CAACC,KAAK,CAAC;IACrE,IAAI,CAACM,QAAQ,CAAC;MAAEL;IAAQ,CAAC,CAAC;EAC9B;EAEAS,MAAMA,CAAA,EAAG;IACL,oBACIhB,OAAA;MAAAiB,QAAA,gBAEIjB,OAAA,CAACJ,aAAa;QAACU,KAAK,EAAE,IAAI,CAACD,KAAK,CAACC,KAAM;QAACY,QAAQ,EAAE,IAAI,CAACV,YAAa;QAACW,QAAQ,EAAE,IAAI,CAACT;MAAa;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEpGvB,OAAA,CAACH,iBAAiB;QAACU,OAAO,EAAE,IAAI,CAACF,KAAK,CAACE;MAAQ;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC;EAEd;AACJ;AAEA,eAAetB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}