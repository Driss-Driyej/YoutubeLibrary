{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Driss\\\\OneDrive\\\\Documents\\\\Youtube_Library\\\\youtube_library\\\\src\\\\view\\\\MainPanelView.tsx\";\nimport React from 'react';\nimport SearchFormView from './SearchFormView';\nimport VideoPlaybackView from './VideoPlaybackView';\nimport '../css/mainPanel.css';\n\n// types des éléments du tableaux vidéos de la base de données\n\n// type du nom et des videos de l'utilisateur\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MainPanelView extends React.Component {\n  render() {\n    const {\n      showSearchForm,\n      videoSelected\n    } = this.props;\n    // première vidéo qui apparaît dans la librarie de l'utilisateur\n    //const getFirstVideo = MainPanelModel.getFirstVideo(userVideos);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-panel-container\",\n      children: showSearchForm ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-panel-view\",\n        children: /*#__PURE__*/_jsxDEV(SearchFormView, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-panel-view\",\n        children: videoSelected &&\n        /*#__PURE__*/\n        // Affiche la vidéo que l'utilisateur veut visionner si getFirstVideo n'est pas null\n        _jsxDEV(VideoPlaybackView, {\n          videoId: videoSelected.id,\n          videoTitle: videoSelected.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default MainPanelView;","map":{"version":3,"names":["React","SearchFormView","VideoPlaybackView","jsxDEV","_jsxDEV","MainPanelView","Component","render","showSearchForm","videoSelected","props","className","children","fileName","_jsxFileName","lineNumber","columnNumber","videoId","id","videoTitle","title"],"sources":["C:/Users/Driss/OneDrive/Documents/Youtube_Library/youtube_library/src/view/MainPanelView.tsx"],"sourcesContent":["import React from 'react';\r\nimport SearchFormView from './SearchFormView';\r\nimport VideoPlaybackView from './VideoPlaybackView';\r\nimport MainPanelModel from '../model/MainPanelModel';\r\nimport '../css/mainPanel.css';\r\n\r\n// types des éléments du tableaux vidéos de la base de données\r\ninterface video {\r\n    title: string;\r\n    id: string;\r\n}\r\n\r\n// type du nom et des videos de l'utilisateur\r\ninterface MainPanelViewProps {\r\n  showSearchForm: boolean;  \r\n  videoSelected: video;\r\n}\r\n\r\nclass MainPanelView extends React.Component<MainPanelViewProps> {\r\n    render() {\r\n        const {showSearchForm, videoSelected } = this.props;\r\n        // première vidéo qui apparaît dans la librarie de l'utilisateur\r\n        //const getFirstVideo = MainPanelModel.getFirstVideo(userVideos);\r\n\r\n\r\n        return (\r\n            <div className=\"main-panel-container\">\r\n                {showSearchForm ? (\r\n                    <div className=\"main-panel-view\">\r\n                        <SearchFormView />\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"main-panel-view\">\r\n                        {videoSelected && (\r\n                            // Affiche la vidéo que l'utilisateur veut visionner si getFirstVideo n'est pas null\r\n                            <VideoPlaybackView videoId={videoSelected.id} videoTitle={videoSelected.title}/>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainPanelView;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,iBAAiB,MAAM,qBAAqB;AAEnD,OAAO,sBAAsB;;AAE7B;;AAMA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMA,MAAMC,aAAa,SAASL,KAAK,CAACM,SAAS,CAAqB;EAC5DC,MAAMA,CAAA,EAAG;IACL,MAAM;MAACC,cAAc;MAAEC;IAAc,CAAC,GAAG,IAAI,CAACC,KAAK;IACnD;IACA;;IAGA,oBACIN,OAAA;MAAKO,SAAS,EAAC,sBAAsB;MAAAC,QAAA,EAChCJ,cAAc,gBACXJ,OAAA;QAAKO,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC5BR,OAAA,CAACH,cAAc;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC,gBAENZ,OAAA;QAAKO,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAC3BH,aAAa;QAAA;QACV;QACAL,OAAA,CAACF,iBAAiB;UAACe,OAAO,EAAER,aAAa,CAACS,EAAG;UAACC,UAAU,EAAEV,aAAa,CAACW;QAAM;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAClF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IACR;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAEd;AACJ;AAEA,eAAeX,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}